{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./config_ctrl.ts","webpack:///./convertutils.ts","webpack:///./datasource.ts","webpack:///./module.ts","webpack:///./query_ctrl.ts","webpack:///external \"angular\"","webpack:///external \"app/core/utils/datemath\"","webpack:///external \"app/plugins/sdk\"","webpack:///external \"lodash\""],"names":[],"mappings":"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","file":"module.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./module.ts\");\n","export class ChangeMyNameConfigCtrl {\n  static templateUrl = 'partials/config.html';\n  current: any;\n\n  constructor($scope) {\n  }\n}\n","import {parse} from 'grafana/app/core/utils/datemath';\nimport _ from 'lodash';\n\nexport function _convertToAtsdTime(date: any) {\n  date = date !== 'now' ? date : new Date();\n  date = parse(date);\n\n  return date.toISOString();\n}\n\nexport function _parsePeriod(period) {\n  return {count: period.count, unit: period.unit};\n}\n\nexport function _transformMetricData(metricData) {\n  const dps = _.map(metricData.data, function(item) {\n    return [item.v, item.t];\n  });\n  let name = metricData.entity + ': ' + metricData.metric;\n  _.each(metricData.tags, (value, key) => {\n    name += `, ${key}=${value}`;\n  });\n  return {target: name, datapoints: dps};\n}\n\nexport function _convertToSeconds(interval) {\n  let count = interval.count;\n\n  switch (interval.unit) {\n    case 'YEAR':\n      count *= 365 * 24 * 60 * 60;\n      break;\n    case 'MONTH':\n      count *= 30 * 24 * 60 * 60;\n      break;\n    case 'WEEK':\n      count *= 7 * 24 * 60 * 60;\n      break;\n    case 'DAY':\n      count *= 24 * 60 * 60;\n      break;\n    case 'HOUR':\n      count *= 60 * 60;\n      break;\n    case 'MINUTE':\n      count *= 60;\n      break;\n    case 'SECOND':\n      break;\n    default:\n      count = 0;\n  }\n\n  return count;\n}\n","import angular from 'angular';\nimport _ from 'lodash';\nimport {_convertToAtsdTime, _convertToSeconds, _parsePeriod, _transformMetricData} from './convertutils';\n\nexport default class AtsdDatasource {\n  private readonly url: string;\n  private readonly basicAuth: string;\n\n  constructor(instanceSettings, private backendSrv, private templateSrv, private $q) {\n    this.url = instanceSettings.url;\n    this.basicAuth = instanceSettings.basicAuth;\n    this.templateSrv = templateSrv;\n    this.backendSrv = backendSrv;\n  }\n\n  query(options) {\n    const start = _convertToAtsdTime(options.range.from);\n    const end = _convertToAtsdTime(options.range.to);\n    const qs: any[] = [];\n\n    _.each(options.targets, target => {\n      target.disconnect = options.targets[0].disconnect;\n      qs.push(this._convertTargetToQuery(target));\n    });\n\n    const queries = _.compact(qs);\n\n    if (_.isEmpty(queries)) {\n      const d = this.$q.defer();\n      d.resolve({data: []});\n      return d.promise;\n    }\n\n    const groupByTags = {};\n\n    _.each(queries, query => {\n      _.each(query.tags, (val, key) => {\n        groupByTags[key] = true;\n      });\n    });\n\n    return this._performTimeSeriesQuery(queries, start, end).then(response => {\n      if (response.data === undefined) {\n        return {data: []};\n      }\n      const result = response.data.map(_transformMetricData);\n      result.sort((a, b) => {\n        const nameA = a.target.toLowerCase();\n        const nameB = b.target.toLowerCase();\n\n        if (nameA < nameB) {\n          return -1;\n        } else if (nameA > nameB) {\n          return 1;\n        } else {\n          return 0;\n        }\n      });\n\n      return {data: result};\n    });\n  }\n\n  private _performTimeSeriesQuery(queries, start, end) {\n    const tsQueries: any[] = [];\n\n    _.each(queries, query => {\n      if (query.entity !== '' && query.metric !== '') {\n        if (query.implicit) {\n          if (query.tagCombos !== undefined) {\n            _.each(query.tagCombos, group => {\n              if (group.en) {\n                const tags = {};\n\n                _.each(group.data, (value, key) => {\n                  tags[key] = [value];\n                });\n\n                tsQueries.push({\n                  startDate: start,\n                  endDate: end,\n                  limit: 10000,\n                  entity: query.entity,\n                  metric: query.metric,\n                  tags: tags,\n                  timeFormat: 'milliseconds',\n                  aggregate: query.aggregation,\n                });\n              }\n            });\n          }\n        } else {\n          const tags = {};\n\n          for (const k in query.tags) {\n            tags[k] = query.tags[k];\n          }\n\n          tsQueries.push({\n            startDate: start,\n            endDate: end,\n            limit: 10000,\n            entity: query.entity,\n            metric: query.metric,\n            tags: tags,\n            timeFormat: 'milliseconds',\n            aggregate: query.aggregation,\n          });\n        }\n      }\n    });\n\n    if (tsQueries.length === 0) {\n      const d = this.$q.defer();\n      d.resolve({data: undefined});\n      return d.promise;\n    }\n\n    const options = {\n      method: 'POST',\n      url: this.fullUrl('/api/v1/series/query'),\n      data: tsQueries,\n      headers: {\n        Authorization: this.basicAuth,\n      },\n    };\n\n    return this.backendSrv.datasourceRequest(options).then(result => result);\n  }\n\n  getEntities(params) {\n    const options = {\n      method: 'GET',\n      url: this.fullUrl('/api/v1/entities'),\n      params: params,\n      headers: {\n        Authorization: this.basicAuth,\n      },\n    };\n    return this.httpRequest(options).then((result) => {\n      return result.data;\n    });\n  }\n\n  getMetrics(entity, params) {\n    const options = {\n      method: 'GET',\n      url: this.fullUrl('/api/v1/entities/' + entity + '/metrics'),\n      params: params,\n      headers: {\n        Authorization: this.basicAuth,\n      },\n    };\n    return this.httpRequest(options).then((result) => {\n      return result.data;\n    });\n  }\n\n  getMetricSeries(metric, params) {\n    const options = {\n      method: 'GET',\n      url: this.fullUrl('/api/v1/metrics/' + metric + '/series'),\n      params: params,\n      headers: {\n        Authorization: this.basicAuth,\n      },\n    };\n    return this.httpRequest(options).then(result => result.data);\n  }\n\n  testDatasource() {\n    const options = {\n      method: 'POST',\n      url: this.fullUrl('/api/v1/series/query'),\n      data: [],\n      headers: {\n        Authorization: this.basicAuth,\n      },\n    };\n    return this.httpRequest(options).then(() => ({\n      status: 'success',\n      message: 'Data source is working',\n      title: 'Success',\n    }));\n  }\n\n  httpRequest(options) {\n    if (!options.cache) {\n      options.cache = true;\n    }\n    return this.backendSrv.datasourceRequest(options);\n  }\n\n  fullUrl(part) {\n    const fullUrl = this.url[this.url.length - 1] !== '/' ? this.url + '/' : this.url;\n    if (!(part.length <= 0 || part[0] !== '/')) {\n      part = part.substr(1, part.length - 1);\n    }\n    return fullUrl + part;\n  }\n\n  private _convertTargetToQuery(target) {\n    if (!target.metric || !target.entity || target.hide) {\n      return null;\n    }\n\n    const query = {\n      entity: this.templateSrv.replace(target.entity),\n      metric: this.templateSrv.replace(target.metric),\n\n      aggregation: target.aggregation.type !== undefined ? target.aggregation : undefined,\n      tagCombos: angular.copy(target.tagCombos),\n      implicit: angular.copy(target.implicit),\n      tags: {},\n      disconnect:\n        target.disconnect !== undefined && target.disconnect !== ''\n          ? _convertToSeconds(_parsePeriod(target.disconnect))\n          : 24 * 60 * 60,\n    };\n\n    target.tags.forEach(item => {\n      query.tags[item.key] = item.value;\n    });\n\n    return query;\n  }\n}\n","import AtsdDatasource from './datasource';\nimport {AtsdQueryCtrl} from './query_ctrl';\nimport {ChangeMyNameConfigCtrl} from './config_ctrl';\n\nclass ChangeMyNameAnnotationsQueryCtrl {\n  static templateUrl = 'partials/annotations.editor.html';\n}\n\nexport {\n  AtsdDatasource as Datasource,\n  AtsdQueryCtrl as QueryCtrl,\n  ChangeMyNameConfigCtrl as ConfigCtrl,\n  ChangeMyNameAnnotationsQueryCtrl as AnnotationsQueryCtrl,\n};\n","import _ from 'lodash';\nimport {QueryCtrl} from 'grafana/app/plugins/sdk';\n\ninterface Suggestion {\n  metrics: string[];\n  entities: string[];\n  aggregation: {\n    types: any;\n    period: {units: any};\n  };\n  tags: {\n    keys: Array<any>;\n    values: any[];\n  };\n}\n\ninterface State {\n  isLoaded: boolean;\n  tagRow: {\n    isEdit: boolean;\n    canAdd: boolean;\n    tags: any[];\n  };\n}\n\ninterface Segment {\n  tagEditor: {\n    editIndex: number | undefined;\n    key: string | undefined;\n    value: string | undefined;\n  };\n}\n\ninterface Metric {\n  name: string;\n}\n\nexport class AtsdQueryCtrl extends QueryCtrl {\n  static templateUrl = 'partials/query.editor.html';\n  private suggest: Suggestion;\n  private segments: Segment;\n  private state: State;\n\n  constructor($scope, $injector) {\n    super($scope, $injector);\n\n    this.suggest = {\n      metrics: [],\n      entities: [],\n      aggregation: {\n        types: AtsdQueryCtrl.aggregateOptions(),\n        period: {\n          units: AtsdQueryCtrl.unitOptions(),\n        },\n      },\n      tags: {\n        keys: [],\n        values: [],\n      },\n    };\n\n    this.segments = {\n      tagEditor: {\n        editIndex: undefined,\n        key: undefined,\n        value: undefined,\n      },\n    };\n\n    this.state = {\n      isLoaded: true,\n      tagRow: {\n        isEdit: false,\n        canAdd: true,\n        tags: [],\n      },\n    };\n\n    if (this.target.entity) {\n      this.entityBlur();\n    }\n\n    if (typeof this.target.tags !== 'object') {\n      this.target.tags = [];\n    } else {\n      for (let i = 0; i < this.target.tags.length; i++) {\n        this.state.tagRow.tags.push({selected: false});\n      }\n    }\n    this.target.entity = this.target.entity ? this.target.entity : undefined;\n    this.target.metric = this.target.metric ? this.target.metric : undefined;\n    this.target.aggregation = this.target.aggregation\n      ? this.target.aggregation\n      : {\n        type: this.suggest.aggregation.types[0].value,\n        period: {\n          count: 1,\n          unit: this.suggest.aggregation.period.units[3].value,\n        },\n      };\n\n    this.suggest.entities = [];\n    this.datasource\n      .getEntities({})\n      .then(result => {\n        result.forEach(item => this.suggest.entities.push(item.name));\n        this.state.isLoaded = false;\n      })\n      .catch(() => console.log('Failed to retrieve entities'));\n  }\n\n  private static aggregateOptions() {\n    const aggregateTypes = [\n      undefined,\n      'Count',\n      'Min',\n      'Max',\n      'Avg',\n      'Median',\n      'Sum',\n      'Percentile_999',\n      'Percentile_995',\n      'Percentile_99',\n      'Percentile_95',\n      'Percentile_90',\n      'Percentile_75',\n      'First',\n      'Last',\n      'Delta',\n      'Wavg',\n      'Wtavg',\n      'Standard_deviation',\n    ];\n    return _.map(\n      aggregateTypes,\n      item => item ? {\n        label: item,\n        value: item.toUpperCase(),\n      } : {\n        label: 'None',\n        value: item,\n      },\n    );\n  }\n\n  private static unitOptions() {\n    return [\n      {\n        label: 'MILLISECOND',\n        value: 'MILLISECOND',\n      },\n      {\n        label: 'SECOND',\n        value: 'SECOND',\n      },\n      {\n        label: 'MINUTE',\n        value: 'MINUTE',\n      },\n      {\n        label: 'HOUR',\n        value: 'HOUR',\n      },\n      {\n        label: 'DAY',\n        value: 'DAY',\n      },\n      {\n        label: 'WEEK',\n        value: 'WEEK',\n      },\n      {\n        label: 'MONTH',\n        value: 'MONTH',\n      },\n      {\n        label: 'QUARTER',\n        value: 'QUARTER',\n      },\n      {\n        label: 'YEAR',\n        value: 'YEAR',\n      },\n    ];\n  }\n\n  entityBlur() {\n    this.refresh();\n    if (this.target.entity) {\n      this.datasource.getMetrics(this.target.entity, {}).then((result: Array<Metric>) => {\n        this.suggest.metrics = [];\n        if (result instanceof Array) {\n          result.forEach(item => {\n            this.suggest.metrics.push(item.name);\n          });\n        }\n      });\n    }\n  }\n\n  metricBlur() {\n    this.refresh();\n    this.suggestTags();\n  }\n\n  tagRemove(index) {\n    this.target.tags.splice(index, 1);\n    this.segments.tagEditor.editIndex = undefined;\n    this.refresh();\n  }\n\n  tagEdit(index) {\n    this.segments.tagEditor.editIndex = index;\n    this.segments.tagEditor.key = this.target.tags[index].key;\n    this.segments.tagEditor.value = this.target.tags[index].value;\n    this.state.tagRow.tags[index].isEdit = true;\n    this.state.tagRow.isEdit = true;\n    this.state.tagRow.isEdit = true;\n  }\n\n  tagMouseover(index) {\n    if (!this.state.tagRow.isEdit) {\n      this.state.tagRow.tags[index].selected = true;\n    }\n  }\n\n  tagMouseleave(index) {\n    if (!this.state.tagRow.isEdit) {\n      this.state.tagRow.tags[index].selected = false;\n    }\n  }\n\n  saveTag() {\n    var editorValue = {\n      key: this.segments.tagEditor.key,\n      value: this.segments.tagEditor.value,\n    };\n    var index = this.segments.tagEditor.editIndex;\n    if (typeof index !== 'undefined') {\n      this.target.tags[index] = editorValue;\n    } else {\n      this.target.tags.push(editorValue);\n      this.state.tagRow.tags.push({selected: false});\n    }\n    if (typeof this.segments.tagEditor.editIndex !== 'undefined') {\n      this.state.tagRow.tags[this.segments.tagEditor.editIndex].selected = false;\n    }\n    this.state.tagRow.isEdit = false;\n    this.state.tagRow.canAdd = true;\n    this.segments.tagEditor.key = '';\n    this.segments.tagEditor.value = '';\n    this.refresh();\n  }\n\n  removeAllTags() {\n    this.closeTagEditor();\n    this.target.tags.length = 0;\n    this.refresh();\n  }\n\n  showTagEditor(index) {\n    if (typeof index !== 'undefined') {\n      this.segments.tagEditor.key = this.target.tags[index].key;\n      this.segments.tagEditor.value = this.target.tags[index].value;\n      this.state.tagRow.tags[index].isEdit = true;\n    }\n    this.segments.tagEditor.editIndex = index;\n    this.state.tagRow.isEdit = true;\n    this.state.tagRow.canAdd = false;\n    this.state.tagRow.isEdit = true;\n    this.suggestTags();\n  }\n\n  closeTagEditor() {\n    if (typeof this.segments.tagEditor.editIndex !== 'undefined') {\n      this.state.tagRow.tags[this.segments.tagEditor.editIndex].selected = false;\n    }\n    this.state.tagRow.isEdit = false;\n    this.state.tagRow.canAdd = true;\n    this.segments.tagEditor.key = '';\n    this.segments.tagEditor.value = '';\n  }\n\n  suggestTags() {\n    if (this.target.metric) {\n      const params = {\n        entity: undefined,\n      };\n      if (this.target.entity) {\n        params.entity = this.target.entity;\n      }\n      this.datasource.getMetricSeries(this.target.metric, params).then(series => {\n        this.suggest.tags.keys.length = 0;\n        this.suggest.tags.values.length = 0;\n        series.forEach(item => {\n          for (const key in item.tags) {\n            if (this.suggest.tags.keys.indexOf(key) === -1) {\n              this.suggest.tags.keys.push(key);\n            }\n            const value = item.tags[key];\n            if (this.suggest.tags.values.indexOf(value) === -1) {\n              if (this.segments.tagEditor.key) {\n                if (\n                  key === this.segments.tagEditor.key &&\n                  item.metric === this.target.metric &&\n                  item.entity === this.target.entity\n                ) {\n                  this.suggest.tags.values.push(value);\n                }\n              } else {\n                this.suggest.tags.values.push(value);\n              }\n            }\n          }\n        });\n      });\n    }\n  }\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE_angular__;","module.exports = __WEBPACK_EXTERNAL_MODULE_grafana_app_core_utils_datemath__;","module.exports = __WEBPACK_EXTERNAL_MODULE_grafana_app_plugins_sdk__;","module.exports = __WEBPACK_EXTERNAL_MODULE_lodash__;"],"sourceRoot":""}